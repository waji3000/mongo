# This file contains resmoke tasks that are owned by non-server teams

################################################
#                   Variable                   #
################################################
variables:
  - &gen_burn_in_task_template
    name: gen_burn_in_task_template
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: version_burn_in_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test
    commands:
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: --help

  # Used when the tests it runs depend only on mongod, mongos, the jstestshell and the tools.
  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &task_template
    name: template
    depends_on:
      - name: archive_dist_test
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          resmoke_args: --help
          resmoke_jobs_max: 0 # No cap on number of jobs.

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &gen_task_template
    name: gen_task_template
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test
    commands:
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: --help

  # THIS HAS COPIES IN
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/clusters_and_integrations/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/durable_transactions_and_availability/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/server_divisions/query/tasks.yml
  # - etc/evergreen_yml_components/tasks/resmoke/non_server_teams/tasks.yml
  # ANY MODIFICATIONS HERE SHOULD ALSO BE MADE IN THOSE FILES
  - &benchmark_template
    name: benchmark_template
    depends_on:
      - name: compile_upload_benchmarks
    commands:
      - func: "do benchmark setup"
      - func: "run benchmark tests"
        vars:
          resmoke_args: --help
          resmoke_jobs_max: 1
          suite: benchmark_suite

################################################
#                    Tasks                     #
################################################
tasks:
  ## pretty_printer ##
  - <<: *task_template
    name: run_pretty_printer_tests
    tags: ["assigned_to_jira_team_devprod_build", "auxiliary"]
    depends_on:
      - archive_dist_test_debug
    commands:
      - func: "run tests"
        vars:
          suite: pretty-printer-tests
          install_dir: bazel-bin/install/bin
          exec_timeout_secs: 1800 # 30 min timeout.

  - name: buildscripts_test
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "development_critical",
        "requires_compile_variant",
        "requires_execution_on_windows_patch_build",
      ]
    depends_on: []
    commands:
      - func: "f_expansions_write"
      - func: "do non-compile setup"
      - func: "set up remote credentials"
      - func: "f_expansions_write"
      - func: "configure evergreen api credentials"
      - func: "gen feature flags"
      - func: "run tests"
        vars:
          resmoke_jobs_max: 1

  - name: check_workstation_setup_script
    tags: ["assigned_to_jira_team_devprod_correctness", "auxiliary"]
    depends_on: []
    commands:
      - func: "do pre workstation setup"
      - func: "set up then check workstation script"

  - <<: *gen_burn_in_task_template
    name: burn_in_tags_gen
    tags: ["assigned_to_jira_team_devprod_correctness", "auxiliary"]
    patch_only: true
    commands:
      - func: "generate resmoke tasks"

  - <<: *gen_burn_in_task_template
    name: burn_in_tests_gen
    tags: ["assigned_to_jira_team_devprod_correctness", "auxiliary"]
    patch_only: true
    commands:
      - func: "generate resmoke tasks"

  - <<: *task_template
    name: mongosTest
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "release_critical",
        "misc_js",
        "non_read_maj",
        "non_live_record",
      ]
    commands:
      - func: "do setup"
      - func: "run tests"
        vars:
          suite: mongos_test

  ## Tests that the multiversion test generation logic is not broken.
  - <<: *gen_task_template
    name: multiversion_sanity_check_gen
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "default",
        "multiversion",
        "multiversion_sanity_check",
      ]
    commands:
      - func: "initialize multiversion tasks"
        vars:
          multiversion_sanity_check_last_continuous_new_new_old: last_continuous
          multiversion_sanity_check_last_continuous_new_old_new: last_continuous
          multiversion_sanity_check_last_continuous_old_new_new: last_continuous
          multiversion_sanity_check_last_lts_new_new_old: last_lts
          multiversion_sanity_check_last_lts_new_old_new: last_lts
          multiversion_sanity_check_last_lts_old_new_new: last_lts
      - func: "generate resmoke tasks"
        vars:
          resmoke_args: >-
            --runNoFeatureFlagTests

  - <<: *task_template
    name: resmoke_end2end_tests
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "default",
        "incompatible_aubsan",
      ]
    commands:
      - func: "do setup"
        vars:
          extraction_change_dir: bazel-bin/install/
          decompress: tar --strip-components=1 -zxvf
      - func: "run tests"

  - <<: *task_template
    name: resmoke_validation_tests
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "development_critical_single_variant",
      ]
    depends_on:
      - name: archive_dist_test
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *gen_task_template
    name: unittest_shell_hang_analyzer_gen
    tags:
      [
        "assigned_to_jira_team_devprod_correctness",
        "release_critical",
        "requires_compile_variant",
        "requires_execution_on_windows_patch_build",
      ]
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        # This is added because of EVG-18211.
        # Without this we are adding extra dependencies on evergreen and it is causing strain
        omit_generated_tasks: true
      - name: archive_dist_test
      - name: archive_dist_test_debug
    commands:
      - func: "generate resmoke tasks"
        vars:
          exec_timeout_secs: 3600
          use_large_distro: "true"

  - <<: *benchmark_template
    name: benchmarks_streams
    tags: ["assigned_to_jira_team_streams", "experimental", "benchmarks"]
    commands:
      - func: "do benchmark setup"
      - func: "run benchmark tests"
        vars:
          suites: benchmarks_streams
          exec_timeout_secs: 18000 # 5 hour timeout.
          resmoke_jobs_max: 1

  - <<: *task_template
    name: streams
    tags: ["assigned_to_jira_team_streams", "default"]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: streams_kafka
    tags: ["assigned_to_jira_team_streams", "experimental"]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: streams_kafka_gwproxy
    tags: ["assigned_to_jira_team_streams", "experimental"]
    commands:
      - command: ec2.assume_role
        params:
          role_arn: "arn:aws:iam::664315256653:role/streams-evergreen-ecr-access-ro"
      - func: "do setup"
      - func: "run tests with aws credentials"

  - <<: *task_template
    name: streams_kafka_benchmark
    tags: ["assigned_to_jira_team_streams", "experimental"]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: streams_https
    tags: ["assigned_to_jira_team_streams", "default"]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: streams_lambda
    tags: ["assigned_to_jira_team_streams", "experimental"]
    commands:
      - func: "do setup"
      - func: "run tests"

  - <<: *task_template
    name: streams_s3
    tags: ["assigned_to_jira_team_streams", "experimental"]
    commands:
      - func: "do setup"
      - func: "run tests"
